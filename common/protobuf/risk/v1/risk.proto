// protoc --go_out=plugins=grpc:. *.proto

syntax = "proto3";
import "google/protobuf/empty.proto";
package risk;


option go_package = "/risk/v1";

service User{
    rpc PerformAlive(google.protobuf.Empty) returns (google.protobuf.Empty) {}

    rpc PerformRiskTxs (TxRiskReq) returns (TxRiskRes) {}
    rpc PerformRiskTFA (TFARiskReq) returns (TFARiskRes) {}


    rpc PerformSmsCode (SmsCodeReq) returns (SmsCodeRes) {}
    rpc PerformMailCode (MailCodekReq) returns (MailCodekRes) {}
    rpc PerformVerifyCode (VerifyCodekReq) returns (VerifyCodeRes) {}
}
////
message RiskTx {
    string Contract =1; // v: required
    string TxData = 2;  // v: required
}
message TxRiskReq {
    string UserId = 1;// v: required
    string Address = 2; // v: required
    ////
    repeated RiskTx Txs = 3; // v: required
}


message TxRiskRes {
    int32 Ok = 1;
    string Msg = 2;
    string RiskSerial = 3; 
    repeated string RiskKind = 4;
}
////
message TFARiskReq {
    string UserId = 1; // v: required
    string Operations = 2; // v: required
}
message TFARiskRes {
    int32 Ok = 1;
    string Msg = 2;
    string RiskSerial = 3; 
}
///

message SmsCodeReq {
    string RiskSerial = 1; // v: required
    string Token = 2; // v: required
}
message SmsCodeRes {
    int32 Ok = 1;
    string Msg = 2;
}

///

message MailCodekReq {
    string RiskSerial = 1; // v: required
    string Token= 2; // v: required
}
message MailCodekRes {
    int32 Ok = 1;
    string Msg = 2;
}

/////
message VerifyCodekReq {
    string RiskSerial = 1; // v: required
    string Token = 2; // v: required
    string Code = 3; // v: required
}
message VerifyCodeRes {
    int32 Ok = 1;
    string Msg = 2;
}